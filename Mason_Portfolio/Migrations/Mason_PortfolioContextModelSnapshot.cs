// <auto-generated />
using System;
using Mason_Portfolio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mason_Portfolio.Migrations
{
    [DbContext(typeof(Mason_PortfolioContext))]
    partial class Mason_PortfolioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Mason_Portfolio.Models.AboutMeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AboutMeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutMeData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.ContactData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AboutMeDataId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactDataId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AboutMeDataId");

                    b.HasIndex("ContactDataId");

                    b.ToTable("PortfolioData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioItemData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ItemImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortfolioDataId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioDataId");

                    b.ToTable("PortfolioItemData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.SocialMediaLinkData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactDataId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FontAwesomeIconFamily")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontAwesomeIconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortfolioItemDataId")
                        .HasColumnType("int");

                    b.Property<string>("RedirectLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactDataId");

                    b.HasIndex("PortfolioItemDataId");

                    b.ToTable("SocialMediaLinkData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioData", b =>
                {
                    b.HasOne("Mason_Portfolio.Models.AboutMeData", "AboutMeData")
                        .WithMany()
                        .HasForeignKey("AboutMeDataId");

                    b.HasOne("Mason_Portfolio.Models.ContactData", "ContactData")
                        .WithMany()
                        .HasForeignKey("ContactDataId");

                    b.Navigation("AboutMeData");

                    b.Navigation("ContactData");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioItemData", b =>
                {
                    b.HasOne("Mason_Portfolio.Models.PortfolioData", null)
                        .WithMany("PortfolioItems")
                        .HasForeignKey("PortfolioDataId");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.SocialMediaLinkData", b =>
                {
                    b.HasOne("Mason_Portfolio.Models.ContactData", null)
                        .WithMany("SocialMediaLinks")
                        .HasForeignKey("ContactDataId");

                    b.HasOne("Mason_Portfolio.Models.PortfolioItemData", null)
                        .WithMany("ItemSocialMediaLinks")
                        .HasForeignKey("PortfolioItemDataId");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.ContactData", b =>
                {
                    b.Navigation("SocialMediaLinks");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioData", b =>
                {
                    b.Navigation("PortfolioItems");
                });

            modelBuilder.Entity("Mason_Portfolio.Models.PortfolioItemData", b =>
                {
                    b.Navigation("ItemSocialMediaLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
